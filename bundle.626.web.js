"use strict";(self.webpackChunk_mmomtchev_react_native_settings=self.webpackChunk_mmomtchev_react_native_settings||[]).push([[626],{1626:(n,e,t)=>{t.r(e),t.d(e,{default:()=>i});const i="import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Dimensions, StyleSheet, View} from 'react-native';\nimport {NavigationContainer} from '@react-navigation/native';\n\nimport {default as ReactNativeSettings, SettingsElement} from '@mmomtchev/react-native-settings';\n\n// We will store the config here\nconst configData: Record<string, string> = {};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        maxHeight: Dimensions.get('window').height,\n        backgroundColor: '#fff',\n        justifyContent: 'center',\n        padding: '1.5%'\n    }\n});\n\n// Retrieve a conf item or return the default\nconst confGet = (key: string, def: string): string => configData[key] || def;\n\n// Store a conf item\nconst confSet = (key: string, value: string): void => {\n    configData[key] = value;\n};\n\nconst intelligence: Record<string, string> = {L: 'Low', M: 'Medium', H: 'High'};\n\n// This is the configuration schema\nconst settings: SettingsElement[] = [\n    {\n        label: 'Name',\n        type: 'string',\n        display: (s) => (s && s.length ? s : 'empty'),\n        get: confGet.bind(null, '@name', ''),\n        set: confSet.bind(null, '@name')\n    },\n    // Choose from a list, uses the standard phone navigation screens\n    {\n        label: 'Intelligence',\n        title: 'Select Intelligence',\n        type: 'enum',\n        values: Object.keys(intelligence),\n        display: (v: string) => intelligence[v],\n        get: confGet.bind(null, '@int', 'M'),\n        set: confSet.bind(null, '@int')\n    },\n    // Boolean switch\n    {\n        label: 'Wings',\n        type: 'boolean',\n        get: async () => (await confGet('@wings', 'false')) === 'true',\n        set: (v) => confSet('@wings', v.toString())\n    }\n];\n\nexport default function Settings() {\n    // Simply pass the schema here\n    // It integrates in your existing `NavigationContainer` or `Screen`\n    return (\n        <NavigationContainer>\n            <View style={styles.container}>\n                <ReactNativeSettings settings={settings} />\n            </View>\n        </NavigationContainer>\n    );\n}\n\nReactDOM.render(<Settings />, window.document.getElementById('root'));\n"}}]);