// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components render 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "padding": 5,
    }
  }
>
  <View
    pointerEvents="auto"
    style={
      Object {
        "flex": 1,
        "opacity": 1,
      }
    }
  >
    <RNCSafeAreaProvider
      onInsetsChange={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreenStack
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          collapsable={false}
          gestureResponseDistance={
            Object {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          nativeBackButtonDismissalEnabled={false}
          onAppear={[Function]}
          onDisappear={[Function]}
          onDismissed={[Function]}
          onGestureCancel={[Function]}
          onHeaderBackButtonClicked={[Function]}
          onNativeDismissCancelled={[Function]}
          onTransitionProgress={[Function]}
          onWillDisappear={[Function]}
          replaceAnimation="push"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          stackPresentation="push"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          swipeDirection="horizontal"
        >
          <RNSScreenStackHeaderConfig
            backButtonInCustomView={false}
            backTitleVisible={true}
            backgroundColor="rgb(255, 255, 255)"
            color="rgb(0, 122, 255)"
            direction="ltr"
            disableBackButtonMenu={false}
            hidden={true}
            hideBackButton={false}
            largeTitleHideShadow={false}
            title="ReactNativeSettingsMain"
            titleColor="rgb(28, 28, 30)"
            topInsetEnabled={false}
            translucent={false}
          />
          <View
            accessibilityElementsHidden={false}
            importantForAccessibility="auto"
            style={
              Object {
                "flex": 1,
                "flexDirection": "column-reverse",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                  },
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "padding": 5,
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text>
                      _N_A_M_E
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#c8c7cc",
                        }
                      }
                    >
                      empty
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text>
                      1nt3ll1g3nc3
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#c8c7cc",
                        }
                      }
                    >
                      Alpha
                    </Text>
                  </View>
                </View>
                <View>
                  <Text>
                    FEATURES
                  </Text>
                  <View
                    style={
                      Object {
                        "padding": 5,
                      }
                    }
                  >
                    <View
                      accessibilityState={
                        Object {
                          "busy": undefined,
                          "checked": undefined,
                          "disabled": undefined,
                          "expanded": undefined,
                          "selected": undefined,
                        }
                      }
                      accessibilityValue={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "now": undefined,
                          "text": undefined,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "borderBottomWidth": 2,
                            "borderColor": "#c8c7cc",
                            "flexDirection": "row",
                            "height": 40,
                            "justifyContent": "space-between",
                            "paddingEnd": 10,
                            "paddingStart": 10,
                          }
                        }
                      >
                        <Text>
                          wiiings
                        </Text>
                        <View
                          pointerEvents="none"
                        >
                          <RCTSwitch
                            accessibilityRole="switch"
                            onChange={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "height": 31,
                                "width": 51,
                              }
                            }
                            value={true}
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenStack>
    </RNCSafeAreaProvider>
  </View>
</View>
`;

exports[`styles render 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "padding": 4,
    }
  }
>
  <View
    pointerEvents="auto"
    style={
      Object {
        "flex": 1,
        "opacity": 1,
      }
    }
  >
    <RNCSafeAreaProvider
      onInsetsChange={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreenStack
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          collapsable={false}
          gestureResponseDistance={
            Object {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          nativeBackButtonDismissalEnabled={false}
          onAppear={[Function]}
          onDisappear={[Function]}
          onDismissed={[Function]}
          onGestureCancel={[Function]}
          onHeaderBackButtonClicked={[Function]}
          onNativeDismissCancelled={[Function]}
          onTransitionProgress={[Function]}
          onWillDisappear={[Function]}
          replaceAnimation="push"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          stackPresentation="push"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          swipeDirection="horizontal"
        >
          <RNSScreenStackHeaderConfig
            backButtonInCustomView={false}
            backTitleVisible={true}
            backgroundColor="rgb(255, 255, 255)"
            color="rgb(0, 122, 255)"
            direction="ltr"
            disableBackButtonMenu={false}
            hidden={true}
            hideBackButton={false}
            largeTitleHideShadow={false}
            title="ReactNativeSettingsMain"
            titleColor="rgb(28, 28, 30)"
            topInsetEnabled={false}
            translucent={false}
          />
          <View
            accessibilityElementsHidden={false}
            importantForAccessibility="auto"
            style={
              Object {
                "flex": 1,
                "flexDirection": "column-reverse",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                  },
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "padding": 6,
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "fontFamily": "sans-serif",
                        "height": 41,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "color": "blue",
                        }
                      }
                    >
                      Name
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "red",
                        }
                      }
                    >
                      empty
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "fontFamily": "sans-serif",
                        "height": 41,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "color": "blue",
                        }
                      }
                    >
                      Intelligence
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "red",
                        }
                      }
                    >
                      Alpha
                    </Text>
                  </View>
                </View>
                <View>
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#dce3f4",
                        "flexDirection": "row",
                        "height": 42,
                        "paddingEnd": 12,
                        "paddingStart": 12,
                      }
                    }
                  >
                    <Text
                      style={
                        Object {
                          "color": "blue",
                        }
                      }
                    >
                      Header
                    </Text>
                  </View>
                  <View
                    style={
                      Object {
                        "padding": 6,
                      }
                    }
                  >
                    <View
                      accessibilityState={
                        Object {
                          "busy": undefined,
                          "checked": undefined,
                          "disabled": undefined,
                          "expanded": undefined,
                          "selected": undefined,
                        }
                      }
                      accessibilityValue={
                        Object {
                          "max": undefined,
                          "min": undefined,
                          "now": undefined,
                          "text": undefined,
                        }
                      }
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Object {
                            "alignItems": "center",
                            "borderBottomWidth": 2,
                            "borderColor": "#c8c7cc",
                            "flexDirection": "row",
                            "fontFamily": "sans-serif",
                            "height": 41,
                            "justifyContent": "space-between",
                            "paddingEnd": 10,
                            "paddingStart": 10,
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "color": "blue",
                            }
                          }
                        >
                          Wings
                        </Text>
                        <View
                          pointerEvents="none"
                        >
                          <RCTSwitch
                            accessibilityRole="switch"
                            onChange={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "height": 31,
                                "width": 51,
                              }
                            }
                            value={true}
                          />
                        </View>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenStack>
    </RNCSafeAreaProvider>
  </View>
</View>
`;
