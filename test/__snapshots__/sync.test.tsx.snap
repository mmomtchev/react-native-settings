// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`sync close the keyboard while setting a screen element 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "padding": 5,
    }
  }
>
  <View
    pointerEvents="auto"
    style={
      Object {
        "flex": 1,
        "opacity": 1,
      }
    }
  >
    <RNCSafeAreaProvider
      onInsetsChange={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreenStack
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          collapsable={false}
          gestureResponseDistance={
            Object {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          nativeBackButtonDismissalEnabled={false}
          onAppear={[Function]}
          onDisappear={[Function]}
          onDismissed={[Function]}
          onGestureCancel={[Function]}
          onHeaderBackButtonClicked={[Function]}
          onNativeDismissCancelled={[Function]}
          onTransitionProgress={[Function]}
          onWillDisappear={[Function]}
          replaceAnimation="push"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          stackPresentation="push"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          swipeDirection="horizontal"
        >
          <RNSScreenStackHeaderConfig
            backButtonInCustomView={false}
            backTitleVisible={true}
            backgroundColor="rgb(255, 255, 255)"
            color="rgb(0, 122, 255)"
            direction="ltr"
            disableBackButtonMenu={false}
            hidden={true}
            hideBackButton={false}
            largeTitleHideShadow={false}
            title="ReactNativeSettingsMain"
            titleColor="rgb(28, 28, 30)"
            topInsetEnabled={false}
            translucent={false}
          />
          <View
            accessibilityElementsHidden={false}
            importantForAccessibility="auto"
            style={
              Object {
                "flex": 1,
                "flexDirection": "column-reverse",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                  },
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "padding": 5,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "borderBottomWidth": 2,
                      "borderColor": "#c8c7cc",
                      "flexDirection": "row",
                      "height": 40,
                      "justifyContent": "space-between",
                      "paddingEnd": 10,
                      "paddingStart": 10,
                    }
                  }
                >
                  <TextInput
                    autoFocus={true}
                    blurOnSubmit={true}
                    onBlur={[Function]}
                    onChangeText={[Function]}
                    onSubmitEditing={[Function]}
                    style={
                      Object {
                        "fontFamily": "sans-serif",
                      }
                    }
                    value=""
                  />
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Intelligence
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#c8c7cc",
                        }
                      }
                    >
                      Medium
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Wings
                    </Text>
                    <View
                      pointerEvents="none"
                    >
                      <RCTSwitch
                        accessibilityRole="switch"
                        onChange={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "height": 31,
                            "width": 51,
                          }
                        }
                        value={false}
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenStack>
    </RNCSafeAreaProvider>
  </View>
</View>
`;

exports[`sync close the keyboard while setting a screen element 2`] = `
<View
  style={
    Object {
      "flex": 1,
      "padding": 5,
    }
  }
>
  <View
    pointerEvents="auto"
    style={
      Object {
        "flex": 1,
        "opacity": 1,
      }
    }
  >
    <RNCSafeAreaProvider
      onInsetsChange={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreenStack
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          collapsable={false}
          gestureResponseDistance={
            Object {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          nativeBackButtonDismissalEnabled={false}
          onAppear={[Function]}
          onDisappear={[Function]}
          onDismissed={[Function]}
          onGestureCancel={[Function]}
          onHeaderBackButtonClicked={[Function]}
          onNativeDismissCancelled={[Function]}
          onTransitionProgress={[Function]}
          onWillDisappear={[Function]}
          replaceAnimation="push"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          stackPresentation="push"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          swipeDirection="horizontal"
        >
          <RNSScreenStackHeaderConfig
            backButtonInCustomView={false}
            backTitleVisible={true}
            backgroundColor="rgb(255, 255, 255)"
            color="rgb(0, 122, 255)"
            direction="ltr"
            disableBackButtonMenu={false}
            hidden={true}
            hideBackButton={false}
            largeTitleHideShadow={false}
            title="ReactNativeSettingsMain"
            titleColor="rgb(28, 28, 30)"
            topInsetEnabled={false}
            translucent={false}
          />
          <View
            accessibilityElementsHidden={false}
            importantForAccessibility="auto"
            style={
              Object {
                "flex": 1,
                "flexDirection": "column-reverse",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                  },
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "padding": 5,
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Name
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#c8c7cc",
                        }
                      }
                    >
                      empty
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Intelligence
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#c8c7cc",
                        }
                      }
                    >
                      Medium
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Wings
                    </Text>
                    <View
                      pointerEvents="none"
                    >
                      <RCTSwitch
                        accessibilityRole="switch"
                        onChange={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "height": 31,
                            "width": 51,
                          }
                        }
                        value={false}
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenStack>
    </RNCSafeAreaProvider>
  </View>
</View>
`;

exports[`sync deny setting a string element 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "padding": 5,
    }
  }
>
  <View
    pointerEvents="auto"
    style={
      Object {
        "flex": 1,
        "opacity": 1,
      }
    }
  >
    <RNCSafeAreaProvider
      onInsetsChange={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreenStack
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          collapsable={false}
          gestureResponseDistance={
            Object {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          nativeBackButtonDismissalEnabled={false}
          onAppear={[Function]}
          onDisappear={[Function]}
          onDismissed={[Function]}
          onGestureCancel={[Function]}
          onHeaderBackButtonClicked={[Function]}
          onNativeDismissCancelled={[Function]}
          onTransitionProgress={[Function]}
          onWillDisappear={[Function]}
          replaceAnimation="push"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          stackPresentation="push"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          swipeDirection="horizontal"
        >
          <RNSScreenStackHeaderConfig
            backButtonInCustomView={false}
            backTitleVisible={true}
            backgroundColor="rgb(255, 255, 255)"
            color="rgb(0, 122, 255)"
            direction="ltr"
            disableBackButtonMenu={false}
            hidden={true}
            hideBackButton={false}
            largeTitleHideShadow={false}
            title="ReactNativeSettingsMain"
            titleColor="rgb(28, 28, 30)"
            topInsetEnabled={false}
            translucent={false}
          />
          <View
            accessibilityElementsHidden={false}
            importantForAccessibility="auto"
            style={
              Object {
                "flex": 1,
                "flexDirection": "column-reverse",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                  },
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "padding": 5,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "borderBottomWidth": 2,
                      "borderColor": "#c8c7cc",
                      "flexDirection": "row",
                      "height": 40,
                      "justifyContent": "space-between",
                      "paddingEnd": 10,
                      "paddingStart": 10,
                    }
                  }
                >
                  <TextInput
                    autoFocus={true}
                    blurOnSubmit={true}
                    onBlur={[Function]}
                    onChangeText={[Function]}
                    onSubmitEditing={[Function]}
                    style={
                      Object {
                        "fontFamily": "sans-serif",
                      }
                    }
                    value=""
                  />
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Intelligence
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#c8c7cc",
                        }
                      }
                    >
                      Medium
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Wings
                    </Text>
                    <View
                      pointerEvents="none"
                    >
                      <RCTSwitch
                        accessibilityRole="switch"
                        onChange={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "height": 31,
                            "width": 51,
                          }
                        }
                        value={false}
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenStack>
    </RNCSafeAreaProvider>
  </View>
</View>
`;

exports[`sync deny setting a string element 2`] = `
<View
  style={
    Object {
      "flex": 1,
      "padding": 5,
    }
  }
>
  <View
    pointerEvents="auto"
    style={
      Object {
        "flex": 1,
        "opacity": 1,
      }
    }
  >
    <RNCSafeAreaProvider
      onInsetsChange={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreenStack
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          collapsable={false}
          gestureResponseDistance={
            Object {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          nativeBackButtonDismissalEnabled={false}
          onAppear={[Function]}
          onDisappear={[Function]}
          onDismissed={[Function]}
          onGestureCancel={[Function]}
          onHeaderBackButtonClicked={[Function]}
          onNativeDismissCancelled={[Function]}
          onTransitionProgress={[Function]}
          onWillDisappear={[Function]}
          replaceAnimation="push"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          stackPresentation="push"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          swipeDirection="horizontal"
        >
          <RNSScreenStackHeaderConfig
            backButtonInCustomView={false}
            backTitleVisible={true}
            backgroundColor="rgb(255, 255, 255)"
            color="rgb(0, 122, 255)"
            direction="ltr"
            disableBackButtonMenu={false}
            hidden={true}
            hideBackButton={false}
            largeTitleHideShadow={false}
            title="ReactNativeSettingsMain"
            titleColor="rgb(28, 28, 30)"
            topInsetEnabled={false}
            translucent={false}
          />
          <View
            accessibilityElementsHidden={false}
            importantForAccessibility="auto"
            style={
              Object {
                "flex": 1,
                "flexDirection": "column-reverse",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                  },
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "padding": 5,
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Name
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#c8c7cc",
                        }
                      }
                    >
                      empty
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Intelligence
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#c8c7cc",
                        }
                      }
                    >
                      Medium
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Wings
                    </Text>
                    <View
                      pointerEvents="none"
                    >
                      <RCTSwitch
                        accessibilityRole="switch"
                        onChange={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "height": 31,
                            "width": 51,
                          }
                        }
                        value={false}
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenStack>
    </RNCSafeAreaProvider>
  </View>
</View>
`;

exports[`sync render 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "padding": 5,
    }
  }
>
  <View
    pointerEvents="auto"
    style={
      Object {
        "flex": 1,
        "opacity": 1,
      }
    }
  >
    <RNCSafeAreaProvider
      onInsetsChange={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreenStack
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          collapsable={false}
          gestureResponseDistance={
            Object {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          nativeBackButtonDismissalEnabled={false}
          onAppear={[Function]}
          onDisappear={[Function]}
          onDismissed={[Function]}
          onGestureCancel={[Function]}
          onHeaderBackButtonClicked={[Function]}
          onNativeDismissCancelled={[Function]}
          onTransitionProgress={[Function]}
          onWillDisappear={[Function]}
          replaceAnimation="push"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          stackPresentation="push"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          swipeDirection="horizontal"
        >
          <RNSScreenStackHeaderConfig
            backButtonInCustomView={false}
            backTitleVisible={true}
            backgroundColor="rgb(255, 255, 255)"
            color="rgb(0, 122, 255)"
            direction="ltr"
            disableBackButtonMenu={false}
            hidden={true}
            hideBackButton={false}
            largeTitleHideShadow={false}
            title="ReactNativeSettingsMain"
            titleColor="rgb(28, 28, 30)"
            topInsetEnabled={false}
            translucent={false}
          />
          <View
            accessibilityElementsHidden={false}
            importantForAccessibility="auto"
            style={
              Object {
                "flex": 1,
                "flexDirection": "column-reverse",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                  },
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "padding": 5,
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Name
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#c8c7cc",
                        }
                      }
                    >
                      empty
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Intelligence
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#c8c7cc",
                        }
                      }
                    >
                      Medium
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Wings
                    </Text>
                    <View
                      pointerEvents="none"
                    >
                      <RCTSwitch
                        accessibilityRole="switch"
                        onChange={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "height": 31,
                            "width": 51,
                          }
                        }
                        value={false}
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenStack>
    </RNCSafeAreaProvider>
  </View>
</View>
`;

exports[`sync render 2`] = `
<View
  style={
    Object {
      "flex": 1,
      "padding": 5,
    }
  }
>
  <View
    pointerEvents="auto"
    style={
      Object {
        "flex": 1,
        "opacity": 1,
      }
    }
  >
    <RNCSafeAreaProvider
      onInsetsChange={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreenStack
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          collapsable={false}
          gestureResponseDistance={
            Object {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          nativeBackButtonDismissalEnabled={false}
          onAppear={[Function]}
          onDisappear={[Function]}
          onDismissed={[Function]}
          onGestureCancel={[Function]}
          onHeaderBackButtonClicked={[Function]}
          onNativeDismissCancelled={[Function]}
          onTransitionProgress={[Function]}
          onWillDisappear={[Function]}
          replaceAnimation="push"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          stackPresentation="push"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          swipeDirection="horizontal"
        >
          <RNSScreenStackHeaderConfig
            backButtonInCustomView={false}
            backTitleVisible={true}
            backgroundColor="rgb(255, 255, 255)"
            color="rgb(0, 122, 255)"
            direction="ltr"
            disableBackButtonMenu={false}
            hidden={true}
            hideBackButton={false}
            largeTitleHideShadow={false}
            title="ReactNativeSettingsMain"
            titleColor="rgb(28, 28, 30)"
            topInsetEnabled={false}
            translucent={false}
          />
          <View
            accessibilityElementsHidden={false}
            importantForAccessibility="auto"
            style={
              Object {
                "flex": 1,
                "flexDirection": "column-reverse",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                  },
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "padding": 5,
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Name
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#c8c7cc",
                        }
                      }
                    >
                      empty
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Dexterity
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#c8c7cc",
                        }
                      }
                    >
                      Medium
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Wings
                    </Text>
                    <View
                      pointerEvents="none"
                    >
                      <RCTSwitch
                        accessibilityRole="switch"
                        onChange={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "height": 31,
                            "width": 51,
                          }
                        }
                        value={false}
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenStack>
    </RNCSafeAreaProvider>
  </View>
</View>
`;

exports[`sync set a boolean element 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "padding": 5,
    }
  }
>
  <View
    pointerEvents="auto"
    style={
      Object {
        "flex": 1,
        "opacity": 1,
      }
    }
  >
    <RNCSafeAreaProvider
      onInsetsChange={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreenStack
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          collapsable={false}
          gestureResponseDistance={
            Object {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          nativeBackButtonDismissalEnabled={false}
          onAppear={[Function]}
          onDisappear={[Function]}
          onDismissed={[Function]}
          onGestureCancel={[Function]}
          onHeaderBackButtonClicked={[Function]}
          onNativeDismissCancelled={[Function]}
          onTransitionProgress={[Function]}
          onWillDisappear={[Function]}
          replaceAnimation="push"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          stackPresentation="push"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          swipeDirection="horizontal"
        >
          <RNSScreenStackHeaderConfig
            backButtonInCustomView={false}
            backTitleVisible={true}
            backgroundColor="rgb(255, 255, 255)"
            color="rgb(0, 122, 255)"
            direction="ltr"
            disableBackButtonMenu={false}
            hidden={true}
            hideBackButton={false}
            largeTitleHideShadow={false}
            title="ReactNativeSettingsMain"
            titleColor="rgb(28, 28, 30)"
            topInsetEnabled={false}
            translucent={false}
          />
          <View
            accessibilityElementsHidden={false}
            importantForAccessibility="auto"
            style={
              Object {
                "flex": 1,
                "flexDirection": "column-reverse",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                  },
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "padding": 5,
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Name
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#c8c7cc",
                        }
                      }
                    >
                      empty
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Intelligence
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#c8c7cc",
                        }
                      }
                    >
                      Medium
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Wings
                    </Text>
                    <View
                      pointerEvents="none"
                    >
                      <RCTSwitch
                        accessibilityRole="switch"
                        onChange={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "height": 31,
                            "width": 51,
                          }
                        }
                        value={true}
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenStack>
    </RNCSafeAreaProvider>
  </View>
</View>
`;

exports[`sync set a string element 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "padding": 5,
    }
  }
>
  <View
    pointerEvents="auto"
    style={
      Object {
        "flex": 1,
        "opacity": 1,
      }
    }
  >
    <RNCSafeAreaProvider
      onInsetsChange={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreenStack
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          collapsable={false}
          gestureResponseDistance={
            Object {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          nativeBackButtonDismissalEnabled={false}
          onAppear={[Function]}
          onDisappear={[Function]}
          onDismissed={[Function]}
          onGestureCancel={[Function]}
          onHeaderBackButtonClicked={[Function]}
          onNativeDismissCancelled={[Function]}
          onTransitionProgress={[Function]}
          onWillDisappear={[Function]}
          replaceAnimation="push"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          stackPresentation="push"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          swipeDirection="horizontal"
        >
          <RNSScreenStackHeaderConfig
            backButtonInCustomView={false}
            backTitleVisible={true}
            backgroundColor="rgb(255, 255, 255)"
            color="rgb(0, 122, 255)"
            direction="ltr"
            disableBackButtonMenu={false}
            hidden={true}
            hideBackButton={false}
            largeTitleHideShadow={false}
            title="ReactNativeSettingsMain"
            titleColor="rgb(28, 28, 30)"
            topInsetEnabled={false}
            translucent={false}
          />
          <View
            accessibilityElementsHidden={false}
            importantForAccessibility="auto"
            style={
              Object {
                "flex": 1,
                "flexDirection": "column-reverse",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                  },
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "padding": 5,
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "borderBottomWidth": 2,
                      "borderColor": "#c8c7cc",
                      "flexDirection": "row",
                      "height": 40,
                      "justifyContent": "space-between",
                      "paddingEnd": 10,
                      "paddingStart": 10,
                    }
                  }
                >
                  <TextInput
                    autoFocus={true}
                    blurOnSubmit={true}
                    onBlur={[Function]}
                    onChangeText={[Function]}
                    onSubmitEditing={[Function]}
                    style={
                      Object {
                        "fontFamily": "sans-serif",
                      }
                    }
                    value=""
                  />
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Intelligence
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#c8c7cc",
                        }
                      }
                    >
                      Medium
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Wings
                    </Text>
                    <View
                      pointerEvents="none"
                    >
                      <RCTSwitch
                        accessibilityRole="switch"
                        onChange={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "height": 31,
                            "width": 51,
                          }
                        }
                        value={false}
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenStack>
    </RNCSafeAreaProvider>
  </View>
</View>
`;

exports[`sync set a string element 2`] = `
<View
  style={
    Object {
      "flex": 1,
      "padding": 5,
    }
  }
>
  <View
    pointerEvents="auto"
    style={
      Object {
        "flex": 1,
        "opacity": 1,
      }
    }
  >
    <RNCSafeAreaProvider
      onInsetsChange={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreenStack
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          collapsable={false}
          gestureResponseDistance={
            Object {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          nativeBackButtonDismissalEnabled={false}
          onAppear={[Function]}
          onDisappear={[Function]}
          onDismissed={[Function]}
          onGestureCancel={[Function]}
          onHeaderBackButtonClicked={[Function]}
          onNativeDismissCancelled={[Function]}
          onTransitionProgress={[Function]}
          onWillDisappear={[Function]}
          replaceAnimation="push"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          stackPresentation="push"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          swipeDirection="horizontal"
        >
          <RNSScreenStackHeaderConfig
            backButtonInCustomView={false}
            backTitleVisible={true}
            backgroundColor="rgb(255, 255, 255)"
            color="rgb(0, 122, 255)"
            direction="ltr"
            disableBackButtonMenu={false}
            hidden={true}
            hideBackButton={false}
            largeTitleHideShadow={false}
            title="ReactNativeSettingsMain"
            titleColor="rgb(28, 28, 30)"
            topInsetEnabled={false}
            translucent={false}
          />
          <View
            accessibilityElementsHidden={false}
            importantForAccessibility="auto"
            style={
              Object {
                "flex": 1,
                "flexDirection": "column-reverse",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                  },
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "padding": 5,
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Name
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#c8c7cc",
                        }
                      }
                    >
                      Vogon
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Intelligence
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#c8c7cc",
                        }
                      }
                    >
                      Medium
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Wings
                    </Text>
                    <View
                      pointerEvents="none"
                    >
                      <RCTSwitch
                        accessibilityRole="switch"
                        onChange={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "height": 31,
                            "width": 51,
                          }
                        }
                        value={false}
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenStack>
    </RNCSafeAreaProvider>
  </View>
</View>
`;

exports[`sync set an enum element 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "padding": 5,
    }
  }
>
  <View
    pointerEvents="auto"
    style={
      Object {
        "flex": 1,
        "opacity": 1,
      }
    }
  >
    <RNCSafeAreaProvider
      onInsetsChange={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreenStack
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          collapsable={false}
          gestureResponseDistance={
            Object {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          nativeBackButtonDismissalEnabled={false}
          onAppear={[Function]}
          onDisappear={[Function]}
          onDismissed={[Function]}
          onGestureCancel={[Function]}
          onHeaderBackButtonClicked={[Function]}
          onNativeDismissCancelled={[Function]}
          onTransitionProgress={[Function]}
          onWillDisappear={[Function]}
          replaceAnimation="push"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          stackPresentation="push"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          swipeDirection="horizontal"
        >
          <RNSScreenStackHeaderConfig
            backButtonInCustomView={false}
            backTitleVisible={true}
            backgroundColor="rgb(255, 255, 255)"
            color="rgb(0, 122, 255)"
            direction="ltr"
            disableBackButtonMenu={false}
            hidden={true}
            hideBackButton={false}
            largeTitleHideShadow={false}
            title="ReactNativeSettingsMain"
            titleColor="rgb(28, 28, 30)"
            topInsetEnabled={false}
            translucent={false}
          />
          <View
            accessibilityElementsHidden={true}
            importantForAccessibility="no-hide-descendants"
            style={
              Object {
                "flex": 1,
                "flexDirection": "column-reverse",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                  },
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "padding": 5,
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Name
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#c8c7cc",
                        }
                      }
                    >
                      empty
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Intelligence
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#c8c7cc",
                        }
                      }
                    >
                      Medium
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Wings
                    </Text>
                    <View
                      pointerEvents="none"
                    >
                      <RCTSwitch
                        accessibilityRole="switch"
                        onChange={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "height": 31,
                            "width": 51,
                          }
                        }
                        value={false}
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
        <RNSScreen
          collapsable={false}
          gestureResponseDistance={
            Object {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          nativeBackButtonDismissalEnabled={false}
          onAppear={[Function]}
          onDisappear={[Function]}
          onDismissed={[Function]}
          onGestureCancel={[Function]}
          onHeaderBackButtonClicked={[Function]}
          onNativeDismissCancelled={[Function]}
          onTransitionProgress={[Function]}
          onWillDisappear={[Function]}
          replaceAnimation="push"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          stackPresentation="push"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          swipeDirection="horizontal"
        >
          <RNSScreenStackHeaderConfig
            backButtonInCustomView={false}
            backTitleVisible={false}
            backgroundColor="rgb(255, 255, 255)"
            color="rgb(0, 122, 255)"
            direction="ltr"
            disableBackButtonMenu={false}
            hidden={false}
            hideBackButton={false}
            largeTitleHideShadow={false}
            title="Intelligence"
            titleColor="rgb(28, 28, 30)"
            topInsetEnabled={false}
            translucent={false}
          />
          <View
            accessibilityElementsHidden={false}
            importantForAccessibility="auto"
            style={
              Object {
                "flex": 1,
                "flexDirection": "column-reverse",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                  },
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                  },
                  undefined,
                ]
              }
            >
              <View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text>
                      Low
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text>
                      Medium
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text>
                      High
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenStack>
    </RNCSafeAreaProvider>
  </View>
</View>
`;

exports[`sync set an enum element 2`] = `
<View
  style={
    Object {
      "flex": 1,
      "padding": 5,
    }
  }
>
  <View
    pointerEvents="auto"
    style={
      Object {
        "flex": 1,
        "opacity": 1,
      }
    }
  >
    <RNCSafeAreaProvider
      onInsetsChange={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreenStack
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          collapsable={false}
          gestureResponseDistance={
            Object {
              "bottom": -1,
              "end": -1,
              "start": -1,
              "top": -1,
            }
          }
          nativeBackButtonDismissalEnabled={false}
          onAppear={[Function]}
          onDisappear={[Function]}
          onDismissed={[Function]}
          onGestureCancel={[Function]}
          onHeaderBackButtonClicked={[Function]}
          onNativeDismissCancelled={[Function]}
          onTransitionProgress={[Function]}
          onWillDisappear={[Function]}
          replaceAnimation="push"
          sheetAllowedDetents="large"
          sheetCornerRadius={-1}
          sheetExpandsWhenScrolledToEdge={true}
          sheetGrabberVisible={false}
          sheetLargestUndimmedDetent="all"
          stackPresentation="push"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          swipeDirection="horizontal"
        >
          <RNSScreenStackHeaderConfig
            backButtonInCustomView={false}
            backTitleVisible={true}
            backgroundColor="rgb(255, 255, 255)"
            color="rgb(0, 122, 255)"
            direction="ltr"
            disableBackButtonMenu={false}
            hidden={true}
            hideBackButton={false}
            largeTitleHideShadow={false}
            title="ReactNativeSettingsMain"
            titleColor="rgb(28, 28, 30)"
            topInsetEnabled={false}
            translucent={false}
          />
          <View
            accessibilityElementsHidden={false}
            importantForAccessibility="auto"
            style={
              Object {
                "flex": 1,
                "flexDirection": "column-reverse",
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                  },
                  Object {
                    "backgroundColor": "rgb(242, 242, 242)",
                  },
                  undefined,
                ]
              }
            >
              <View
                style={
                  Object {
                    "padding": 5,
                  }
                }
              >
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Name
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#c8c7cc",
                        }
                      }
                    >
                      empty
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Intelligence
                    </Text>
                    <Text
                      style={
                        Object {
                          "color": "#c8c7cc",
                        }
                      }
                    >
                      High
                    </Text>
                  </View>
                </View>
                <View
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    Object {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "borderBottomWidth": 2,
                        "borderColor": "#c8c7cc",
                        "flexDirection": "row",
                        "height": 40,
                        "justifyContent": "space-between",
                        "paddingEnd": 10,
                        "paddingStart": 10,
                      }
                    }
                  >
                    <Text
                      style={Object {}}
                    >
                      Wings
                    </Text>
                    <View
                      pointerEvents="none"
                    >
                      <RCTSwitch
                        accessibilityRole="switch"
                        onChange={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "height": 31,
                            "width": 51,
                          }
                        }
                        value={false}
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenStack>
    </RNCSafeAreaProvider>
  </View>
</View>
`;
